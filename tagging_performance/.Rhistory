save.image(file = "test_new_tagSNP.Rdata")
load("/media/datn/data/imputation_coverage/6.0_array/loo_vcf/image_chr10_6.0_array.Rdata")
res
h
res_chr10_affy6.0 = res
load("/media/datn/data/imputation_coverage/asian_array/loo_vcf/image_chr10_asian_array.Rdata")
load("/media/datn/data/LD_boost_paper/REAL_boostrap/loo/res_REAL_boostrap.Rdata")
res_REAL_boostrap
res_chr10_vn504 = res_REAL_boostrap
load("/media/datn/data/imputation_coverage/6.0_array/loo_vcf/image_chr10_6.0_array.Rdata")
res_chr10_affy6.0 = res
load("/media/datn/data/imputation_coverage/asian_array/loo_vcf/image_chr10_asian_array.Rdata")
res_chr10_asian = res
load("/media/datn/data/LD_boost_paper/REAL_boostrap/loo/res_REAL_boostrap.Rdata")
res_chr10_vn504 = res_REAL_boostrap
plot_list = list(VN_504_32672 = res_chr10_vn504, ASIAN_array_31226 = res_chr10_asian, AFFYMETRIX_6.0_49427 = res_chr10_affy6.0)
all = data.frame()
for(i in 1: length(plot_list)){
x = data.frame(MAF = names(plot_list[[i]]), r_2 = plot_list[[i]] )
x$method  = names(plot_list[i])
all = rbind(all, x)
}
library(ggplot2)
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.05))
load("/media/datn/data/imputation_coverage/6.0_array/loo_vcf/image_chr10_6.0_array.Rdata")
res_chr10_affy6.0 = res
load("/media/datn/data/imputation_coverage/asian_array/loo_vcf/image_chr10_asian_array.Rdata")
res_chr10_asian = res
load("/media/datn/data/LD_boost_paper/REAL_boostrap/loo/res_REAL_boostrap.Rdata")
res_chr10_vn504 = res_REAL_boostrap
plot_list = list(VN_504_32672 = res_chr10_vn504, ASIAN_array_31226 = res_chr10_asian, AFFYMETRIX_6.0_49427 = res_chr10_affy6.0)
all = data.frame()
for(i in 1: length(plot_list)){
x = data.frame(MAF = names(plot_list[[i]]), r_2 = plot_list[[i]] )
x$method  = names(plot_list[i])
all = rbind(all, x)
}
library(ggplot2)
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.05))
load("test_new_tagSNP.Rdata")
require(parallel)
my_ld = ld[1:100000,]
uni = unique(c(x$BP_A, x$BP_B))
p = uni[200]
require(parallel)
tran_score = function(x, base = exp(1), cutoff = 0.8){
#base = exp(1)
#cutoff = 0.8
return( base^(x*10)/ base^(cutoff*10))
}
ld = read.table(ld_path, header = TRUE)
chr_id = ld$CHR_A[1]
ld = ld[,c("BP_A", "BP_B", "R")]
ld$R2 = ld$R^2
ld = ld[,c("BP_A", "BP_B", "R2")]
ld$score = tran_score(ld$R2)
u = unique(c(ld$BP_A, ld$BP_B))
#tes = sapply(u, FUN = function(x){get_sum_score(x,ld)})
tes2 =  mclapply(u, FUN = function(x){get_sum_score(x,ld)}, mc.cores = 8)
load("test_new_tagSNP.Rdata")
load("test_new_tagSNP.Rdata")
tran_score = function(x, base = exp(1), cutoff = 0.8){
#base = exp(1)
#cutoff = 0.8
return( base^(x*10)/ base^(cutoff*10))
}
#ld = read.table(ld_path, header = TRUE)
chr_id = ld$CHR_A[1]
ld = ld[,c("BP_A", "BP_B", "R")]
ld$R2 = ld$R^2
ld = ld[,c("BP_A", "BP_B", "R2")]
ld$score = tran_score(ld$R2)
u = unique(c(ld$BP_A, ld$BP_B))
#tes = sapply(u, FUN = function(x){get_sum_score(x,ld)})
tes2 =  mclapply(u, FUN = function(x){get_sum_score(x,ld)}, mc.cores = 8)
uni = unique(c(my_ld$BP_A, my_ld$BP_B))
u = unique(c(ld$BP_A, ld$BP_B))
#tes = sapply(u, FUN = function(x){get_sum_score(x,ld)})
tes2 =  mclapply(u, FUN = function(x){get_sum_score(x,ld)}, mc.cores = 8)
get_sum_score = function(pos, ld){
x = which(ld$BP_A == pos)
y = which(ld$BP_B == pos)
idx = unique(c(x,y))
idx_cutoff = idx[ld$score[idx]>=1]
sum_score = sum(ld$score[idx])
res = list(pos = pos, idx = idx, idx_cutoff = idx_cutoff, sum_score = sum_score)
return(res)
}
u = unique(c(ld$BP_A, ld$BP_B))
#tes = sapply(u, FUN = function(x){get_sum_score(x,ld)})
tes2 =  mclapply(u, FUN = function(x){get_sum_score(x,ld)}, mc.cores = 8)
length(tes2)
log(10)
x =read.delim("/media/datn/data/LD_boost_paper/VN504_CHR18/VN_504.chr_18_taggit_BASE_LINE/VN_504.chr_18_taggit_BASE_LINE_tags.txt")
dim(x)
View(x)
View(x)
entity
install.packages(entity)
install.packages("entity")
install.packages("synapser", repos=c("http://ran.synapse.org", "http://cran.fhcrc.org"))
install.packages("synapser")
library(synapser)
synLogin("datngu", "Pehoa12")
synLogin("datngu", "Pehoa123")
library(synapser)
library(synapserutils)
install.packages(synapserutils)
install.packages("synapserutils", repos=c("http://ran.synapse.org", "http://cran.fhcrc.org"))
library(synapser)
library(synapserutils)
synLogin('datngu', 'Pehoa123')
files <- synapserutils::syncFromSynapse(' syn22250949 ')
files <- synapserutils::syncFromSynapse('syn22250949')
R
require(GenomicFeatures)
load("/media/datn/data/LD_boost_paper/VN504_CHR10/VN_504_lm/loo/res_chr10_lm_all.Rdata")
res_chr10_lm_all
load("/media/datn/data/LD_boost_paper/VN504_CHR18/imputation_res/New_scoring_cutoff_score/loo/res_chr_18_10k_cutoff.Rdata")
res_chr_18_10k_cutoff
load("/media/datn/data/LD_boost_paper/VN504_CHR18/testing_Van_idea/half1.Rdata")
load("/media/datn/data/LD_boost_paper/VN504_CHR10/VN_504_lm/loo/res_chr10_lm_all.Rdata")
load("/media/datn/data/LD_boost_paper/VN504_CHR18/imputation_res/New_scoring_cutoff_score/loo/res_chr_18_10k_cutoff.Rdata")
load("/media/datn/data/LD_boost_paper/VN504_CHR18/testing_Van_idea/half1.Rdata")
load("/media/datn/data/LD_boost_paper/VN504_CHR18/testing_Van_idea/half2.Rdata")
load("/media/datn/data/LD_boost_paper/VN504_CHR18/testing_Van_idea/half3.Rdata")
load("/media/datn/data/LD_boost_paper/VN504_CHR18/testing_Van_idea/half4.Rdata")
plot_list = list(VN_greedy_with_model_504_all = res_chr10_lm_all,  Top_half = res_chr_18_10k_cutoff, half_random_1 = half1, half_random_2 = half2, half_random_3 = half3, half_random_4 = half4)
all = data.frame()
for(i in 1: length(plot_list)){
x = data.frame(MAF = names(plot_list[[i]]), r_2 = plot_list[[i]] )
x$method  = names(plot_list[i])
all = rbind(all, x)
}
library(ggplot2)
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.05))
ggplot
all
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.05))
View(all)
class(all$MAF)
pick = data$MAF == "0:0.01"
data = data[!pick,]
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.05))
pick = data$MAF == "0:0.01"
pick = all$MAF == "0:0.01"
all = all[!pick,]
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.05))
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.025)) + ggtitle("VN504 CHR 18") + ylim(0, 0.95)
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.025)) + ggtitle("VN504 CHR 18") + ylim(0.8, 0.95)
library(ggplot2)
pick = all$MAF == "0:0.01"
all = all[!pick,]
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.05))
ggplot(data=all, aes(x=MAF, y=r_2, group=method, col = method)) +
geom_line()+
geom_point() + guides(x = guide_axis(angle = 45)) + theme_light() + scale_y_continuous(breaks=seq(0,1,0.05)) + labs(title="chr18",
x ="bin of MAF", y = "imputation accuracy")
i = 13
"%&%" = function(a,b)paste0(a,b)
mRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/mRNA/salmon/EGAR000011930" %&% i %&% "no_circular_RNA/quant.sf"
rRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_no_circRNA/EGAR000011930" %&% (i+1) %&% "no_circular_RNA/quant.sf"
rRNA_circ_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_WITH_circRNA/EGAR000011930" %&% (i+1) %&% "_WITH_circular_RNA/quant.sf"
mRNA = read.table(mRNA_path, header = T)
rRNA = read.table(rRNA_path, header = TRUE)
#x = read.table("/media/datn/data/DatProjects/quant_circRNA/runing/salmon_stranded/ISR_EGAR00001193012_ribo_minus_WITH_circular_RNA/quant.sf", header = T)
x = read.table(rRNA_circ_path, header = T)
pick = x$Name %in% rRNA$Name
y = x[pick,]
cor(log2(mRNA$TPM+0.1), log2(rRNA$TPM+0.1))
cor(log2(mRNA$TPM+0.1), log2(y$TPM+0.1))
?seq
seq(1,89,2)
require(GenomicFeatures)
require(Biostrings)
## processing inputs
gtf_sqlite_path = "/media/datn/data/DatProjects/index_human_3775/Homo_sapiens.GRCh37.75.sqlite"
anntxdb <- loadDb(gtf_sqlite_path)
tx = transcripts(anntxdb)
tx_all = select(anntxdb, keys = tx$tx_name, columns=c("GENEID", "TXNAME", "EXONSTRAND", "EXONCHROM"), keytype = "TXNAME")
circInfo_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/circall/filtered_circInfo.txt"
circInfo = read.delim(circInfo_path)
circRNA_host_gene = circInfo$GENEID
pick = tx_all$GENEID %in% circRNA_host_gene
tx_in_circRAN_host_gene = tx_all$TXNAME[pick]
tx_NOT_in_circRAN_host_gene = tx_all$TXNAME[!pick]
length(tx_in_circRAN_host_gene)
length(tx_NOT_in_circRAN_host_gene)
i =11
##################
require(GenomicFeatures)
require(Biostrings)
## processing inputs
gtf_sqlite_path = "/media/datn/data/DatProjects/index_human_3775/Homo_sapiens.GRCh37.75.sqlite"
anntxdb <- loadDb(gtf_sqlite_path)
tx = transcripts(anntxdb)
tx_all = select(anntxdb, keys = tx$tx_name, columns=c("GENEID", "TXNAME", "EXONSTRAND", "EXONCHROM"), keytype = "TXNAME")
circInfo_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/circall/filtered_circInfo.txt"
circInfo = read.delim(circInfo_path)
circRNA_host_gene = circInfo$GENEID
pick = tx_all$GENEID %in% circRNA_host_gene
tx_in_circRAN_host_gene = tx_all$TXNAME[pick]
tx_NOT_in_circRAN_host_gene = tx_all$TXNAME[!pick]
sample_id = seq(1,89,2)
"%p%" = function(a,b) paste0(a,b)
i = 11
mRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/mRNA/salmon/EGAR000011930" %p% i %p% "no_circular_RNA/quant.sf"
rRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_no_circRNA/EGAR000011930" %p% (i+1) %p% "no_circular_RNA/quant.sf"
rRNA_circ_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_WITH_circRNA/EGAR000011930" %p% (i+1) %p% "_WITH_circular_RNA/quant.sf"
mRNA = read.table(mRNA_path, header = T)
rRNA = read.table(rRNA_path, header = TRUE)
rRNA_circ = read.table(rRNA_circ_path, header = T)
# consider all
pick = rRNA_circ$Name %in% rRNA$Name
rRNA_circ_pick = rRNA_circ[pick,]
cor(log2(mRNA$TPM+0.1), log2(rRNA$TPM+0.1))
cor(log2(mRNA$TPM+0.1), log2(rRNA_circ_pick$TPM+0.1))
## consider tx not belong to circRNA host genes
tx_list = tx_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
## consider tx belong to circRNA host genes
tx_list = tx_NOT_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
res = matrix()
res
sample_id = seq(1,89,2)
res = matrix()
for(i in sample_id){
#"%p%" = function(a,b) paste0(a,b)
mRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/mRNA/salmon/EGAR000011930" %p% i %p% "no_circular_RNA/quant.sf"
rRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_no_circRNA/EGAR000011930" %p% (i+1) %p% "no_circular_RNA/quant.sf"
rRNA_circ_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_WITH_circRNA/EGAR000011930" %p% (i+1) %p% "_WITH_circular_RNA/quant.sf"
mRNA = read.table(mRNA_path, header = T)
rRNA = read.table(rRNA_path, header = TRUE)
rRNA_circ = read.table(rRNA_circ_path, header = T)
# consider all
pick = rRNA_circ$Name %in% rRNA$Name
rRNA_circ_pick = rRNA_circ[pick,]
x1 = cor(log2(mRNA$TPM+0.1), log2(rRNA$TPM+0.1))
x2 = cor(log2(mRNA$TPM+0.1), log2(rRNA_circ_pick$TPM+0.1))
## consider tx not belong to circRNA host genes
tx_list = tx_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x3 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x4 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
## consider tx belong to circRNA host genes
tx_list = tx_NOT_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x5 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x6 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
tem = c(i,x1,x2,x3,x4,x5,x6)
res = rbind(res, tem)
}
sample_id = seq(11,89,2)
res = matrix()
for(i in sample_id){
#"%p%" = function(a,b) paste0(a,b)
mRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/mRNA/salmon/EGAR000011930" %p% i %p% "no_circular_RNA/quant.sf"
rRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_no_circRNA/EGAR000011930" %p% (i+1) %p% "no_circular_RNA/quant.sf"
rRNA_circ_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_WITH_circRNA/EGAR000011930" %p% (i+1) %p% "_WITH_circular_RNA/quant.sf"
mRNA = read.table(mRNA_path, header = T)
rRNA = read.table(rRNA_path, header = TRUE)
rRNA_circ = read.table(rRNA_circ_path, header = T)
# consider all
pick = rRNA_circ$Name %in% rRNA$Name
rRNA_circ_pick = rRNA_circ[pick,]
x1 = cor(log2(mRNA$TPM+0.1), log2(rRNA$TPM+0.1))
x2 = cor(log2(mRNA$TPM+0.1), log2(rRNA_circ_pick$TPM+0.1))
## consider tx not belong to circRNA host genes
tx_list = tx_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x3 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x4 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
## consider tx belong to circRNA host genes
tx_list = tx_NOT_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x5 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x6 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
tem = c(i,x1,x2,x3,x4,x5,x6)
res = rbind(res, tem)
}
warnings()
View(res)
i = 11
mRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/mRNA/salmon/EGAR000011930" %p% i %p% "no_circular_RNA/quant.sf"
rRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_no_circRNA/EGAR000011930" %p% (i+1) %p% "no_circular_RNA/quant.sf"
rRNA_circ_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_WITH_circRNA/EGAR000011930" %p% (i+1) %p% "_WITH_circular_RNA/quant.sf"
mRNA = read.table(mRNA_path, header = T)
rRNA = read.table(rRNA_path, header = TRUE)
rRNA_circ = read.table(rRNA_circ_path, header = T)
# consider all
pick = rRNA_circ$Name %in% rRNA$Name
rRNA_circ_pick = rRNA_circ[pick,]
x1 = cor(log2(mRNA$TPM+0.1), log2(rRNA$TPM+0.1))
x2 = cor(log2(mRNA$TPM+0.1), log2(rRNA_circ_pick$TPM+0.1))
## consider tx not belong to circRNA host genes
tx_list = tx_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x3 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x4 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
## consider tx belong to circRNA host genes
tx_list = tx_NOT_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x5 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x6 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
tem = c(i,x1,x2,x3,x4,x5,x6)
tem
res = matrix()
res = rbind(res, tem)
}
res = rbind(res, tem)
res
res = matrix(0,7)
res
res = matrix(7,0)
res = null
res = NULL
res = rbind(res, tem)
res
res = NULL
for(i in sample_id){
#"%p%" = function(a,b) paste0(a,b)
mRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/mRNA/salmon/EGAR000011930" %p% i %p% "no_circular_RNA/quant.sf"
rRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_no_circRNA/EGAR000011930" %p% (i+1) %p% "no_circular_RNA/quant.sf"
rRNA_circ_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_WITH_circRNA/EGAR000011930" %p% (i+1) %p% "_WITH_circular_RNA/quant.sf"
mRNA = read.table(mRNA_path, header = T)
rRNA = read.table(rRNA_path, header = TRUE)
rRNA_circ = read.table(rRNA_circ_path, header = T)
# consider all
pick = rRNA_circ$Name %in% rRNA$Name
rRNA_circ_pick = rRNA_circ[pick,]
x1 = cor(log2(mRNA$TPM+0.1), log2(rRNA$TPM+0.1))
x2 = cor(log2(mRNA$TPM+0.1), log2(rRNA_circ_pick$TPM+0.1))
## consider tx not belong to circRNA host genes
tx_list = tx_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x3 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x4 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
## consider tx belong to circRNA host genes
tx_list = tx_NOT_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x5 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x6 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
tem = c(i,x1,x2,x3,x4,x5,x6)
res = rbind(res, tem)
}
sample_id = seq(11,89,2)
res = NULL
for(i in sample_id){
#"%p%" = function(a,b) paste0(a,b)
mRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/mRNA/salmon/EGAR000011930" %p% i %p% "no_circular_RNA/quant.sf"
rRNA_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_no_circRNA/EGAR000011930" %p% (i+1) %p% "no_circular_RNA/quant.sf"
rRNA_circ_path = "/media/datn/data/DatProjects/quant_circRNA/running_hg19/totalRNA/salmon_decoy_WITH_circRNA/EGAR000011930" %p% (i+1) %p% "_WITH_circular_RNA/quant.sf"
mRNA = read.table(mRNA_path, header = T)
rRNA = read.table(rRNA_path, header = TRUE)
rRNA_circ = read.table(rRNA_circ_path, header = T)
# consider all
pick = rRNA_circ$Name %in% rRNA$Name
rRNA_circ_pick = rRNA_circ[pick,]
x1 = cor(log2(mRNA$TPM+0.1), log2(rRNA$TPM+0.1))
x2 = cor(log2(mRNA$TPM+0.1), log2(rRNA_circ_pick$TPM+0.1))
## consider tx not belong to circRNA host genes
tx_list = tx_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x3 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x4 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
## consider tx belong to circRNA host genes
tx_list = tx_NOT_in_circRAN_host_gene
x = mRNA[ mRNA$Name %in% tx_list,]
y = rRNA[ rRNA$Name %in% tx_list,]
z = rRNA_circ[ rRNA_circ$Name %in% tx_list,]
x5 = cor(log2(x$TPM+0.1), log2(y$TPM+0.1))
x6 = cor(log2(x$TPM+0.1), log2(z$TPM+0.1))
tem = c(i,x1,x2,x3,x4,x5,x6)
res = rbind(res, tem)
}
View(res)
res = as.data.frame(res)
View(res)
t.test(res$V2, res$V3)
t.test(res$V4, res$V5)
boxplot(res$V2, res$V3)
boxplot(res$V4, res$V6)
wilcox.test(res$V2, res$V3, alternative = "two.sided")
wilcox.test(res$V4, res$V5, alternative = "two.sided")
boxplot(res$v2, res$V3, res$V4, res$V5, res$V6, res$V7)
boxplot(res$V2, res$V3, res$V4, res$V5, res$V6, res$V7)
t.test(res$V2, res$V6)
t.test(res$V4, res$V6)
res$V3 - res$V2
x = res$V3 - res$V2
x= res$V5-res$V4
y = res$V7- res$V6
t.test(x,y)
x
y
res$V7 - res$V6
load("/home/datn/Downloads/model.rds")
load("/home/datn/Downloads/model.rds")
readRDS("/home/datn/Downloads/model.rds")
x = readRDS("/home/datn/Downloads/model.rds")
names(x)
x$modelInfo
summary(x)
names(x)
library(ggplot2)
setwd("/media/datn/data/1st_DC_sever/LmTag_GWAS_CLINVAR/impute_acc")
process_coverage <- function(data_path){
load(data_path)
res = compute_coverage(data)
return(res)
}
compute_coverage <- function(df){
#df <- df[df$MAF>=s & df$MAF <e,]
c <- c()
n <- c()
for (i in c(1:100)){
a <- i/100
cover <- sum(df$r_2>=a, na.rm = T)/ nrow(df)
c <- c(c,cover)
n = c(n, a)
}
names(c) = n
res_df = data.frame(cutoff = n, coverage = c)
rownames(res_df) = NULL
return(res_df)
}
read_pop <- function( pop_list = c("KHV", "EAS", "EUR", "SAS"), method_list = c("EQ_MAF", "EQ_uniform", "LmTag", "TagIt", "FastTagger"), n_tag = 0)
{
df = NULL
for( p in pop_list){
if(p == "KHV") size = 32067
if(p == "SAS") size = 44866
if(p == "EUR") size = 41114
if(p == "EAS") size = 32970
if(n_tag> 0) size = n_tag
for (m in method_list){
path = paste0(m, "_", p, "_", size, ".Rdata")
tem = process_coverage(path)
tem$Methods = m
tem$Pop = p
if(is.null(df)){
df = tem}
else{
df = rbind(df, tem)
}
}
}
return(df)
}
size = 0
tem_df = read_pop(n_tag = size)
tem_df$Methods[tem_df$Methods == "LmTag"] = "LmTag_K200"
tem_df$y = round(tem_df$y*100,2)
tem_df$x = tem_df$x * 100
p = ggplot(data = tem_df, aes( x = cutoff, y = coverage  , col = Methods)) + geom_line() + labs(x = "Imputation accuracy (%)", y = "Imputation coverage (%)") + scale_y_continuous(breaks=seq(0,100,5)) + scale_x_continuous(breaks=seq(0,100, 10)) + theme_light() + facet_wrap(~ Pop, nrow = 2)
# + theme(legend.position="top")
pseudo = fread("/media/datn/data2gb/Axiom/phasing/imputed/chr10_imputed_NO_REMOVE_PHASING_pseudo_genotyped_dose.txt")
tem_df$Methods[tem_df$Methods == "LmTag"] = "LmTag_K200"
tem_df$coverage = round(tem_df$coverage*100,2)
tem_df$cutoff = tem_df$cutoff * 100
p = ggplot(data = tem_df, aes( x = cutoff, y = coverage  , col = Methods)) + geom_line() + labs(x = "Imputation accuracy (%)", y = "Imputation coverage (%)") + scale_y_continuous(breaks=seq(0,100,5)) + scale_x_continuous(breaks=seq(0,100, 10)) + theme_light() + facet_wrap(~ Pop, nrow = 2)
# + theme(legend.position="top")
p
out = paste0(size, "_Imputation_coverage_chr10_4_pops.pdf")
pdf(file=out,  width=9, height=7)
p
dev.off()
